%%% function that imports information from a dataVals matrix
%%% calculates the metrics utilized in audio analysis comparisons
classdef wave_compute
    methods
        function output = compute(~, directory, column_indices)
            datavals_path = fullfile(directory, "dataVals.mat");
            try
                datavals = importdata(datavals_path).dataVals;
            catch ME
                % accounts for the 2 ways dataVals can be stored
                if (strcmp(ME.identifier, 'MATLAB:nonExistentField'))
                    datavals = importdata(datavals_path);
                else
                    disp("ERROR: Could not extract dataVals from directory.")
                    disp(datavals_path);
                    disp(ME);
                end
            end
            if isstring(column_indices)
                ilist = size(datavals, 2):-1:1; 
            else 
                ilist = flip(column_indices);
            end
            for i = ilist
                if isempty(datavals(i).f0)
                    output(i) = struct('f0_median', NaN, ...
                                       'f0_mean', NaN, ...
                                       'f0_start', NaN, ...
                                       'f0_end', NaN, ...
                                       'f1_median', NaN, ...
                                       'f1_mean', NaN, ...
                                       'f1_start', NaN, ...
                                       'f1_end', NaN, ...
                                       'f1_0_25', NaN, ...
                                       'f1_25_50', NaN, ...
                                       'f1_50_75', NaN, ...
                                       'f1_75_100', NaN, ...
                                       'f1_5_20', NaN, ...
                                       'f1_20_40', NaN, ...
                                       'f1_40_60', NaN, ...
                                       'f1_60_80', NaN, ...
                                       'f2_median', NaN, ...
                                       'f2_mean', NaN, ...
                                       'f2_start', NaN, ...
                                       'f2_end', NaN, ...
                                       'f2_0_25', NaN, ...
                                       'f2_25_50', NaN, ...
                                       'f2_50_75', NaN, ...
                                       'f2_75_100', NaN, ...
                                       'f2_5_20', NaN, ...
                                       'f2_20_40', NaN, ...
                                       'f2_40_60', NaN, ...
                                       'f2_60_80', NaN, ...
                                       'int_median', NaN, ...
                                       'int_mean', NaN, ...
                                       'int_start', NaN, ...
                                       'int_end', NaN, ...
                                       'f_onset', NaN, ...
                                       'f_offset', NaN, ...
                                       'pitch_onset', NaN, ...
                                       'pitch_offset', NaN, ...
                                       'ampl_onset', NaN, ...
                                       'ampl_offset', NaN, ...
                                       'dur', NaN);
                    continue
                end

                if length(datavals(i).f0) == 1 f0j = 1; else f0j = 2; end
                if length(datavals(i).f1) == 1 f1j = 1; else f1j = 2; end
                if length(datavals(i).f2) == 1 f2j = 1; else f2j = 2; end
                output(i) = struct('f0_median', median(datavals(i).f0, "omitnan"), ...
                                   'f0_mean', mean(datavals(i).f0, "omitnan"), ...
                                   'f0_start', getFirstLast(datavals, i, 'f0', "first"), ...
                                   'f0_end', getFirstLast(datavals, i, 'f0', "last"), ...
                                   'f1_median', median(datavals(i).f1, "omitnan"), ...
                                   'f1_mean', mean(datavals(i).f1, "omitnan"), ...
                                   'f1_start', getFirstLast(datavals, i, 'f1', "first"), ...
                                   'f1_end', getFirstLast(datavals, i, 'f1', "last"), ...
                                   'f1_0_25', meanSection(datavals(i).f1, .001, .25), ...
                                   'f1_25_50', meanSection(datavals(i).f1, .25, .50), ...
                                   'f1_50_75', meanSection(datavals(i).f1, .50, .75), ...
                                   'f1_75_100', meanSection(datavals(i).f1, .75, 0.999), ...
                                   'f1_5_20', meanSection(datavals(i).f1, .05, .20), ...
                                   'f1_20_40', meanSection(datavals(i).f1, .20, .40), ...
                                   'f1_40_60', meanSection(datavals(i).f1, .40, .60), ...
                                   'f1_60_80', meanSection(datavals(i).f1, .60, .80), ...
                                   'f2_median', median(datavals(i).f2, "omitnan"), ...
                                   'f2_mean', mean(datavals(i).f2, "omitnan"), ...
                                   'f2_start', getFirstLast(datavals, i, 'f2', "first"), ...
                                   'f2_end', getFirstLast(datavals, i, 'f2', "last"), ...
                                   'f2_0_25', meanSection(datavals(i).f2, .001, .25), ...
                                   'f2_25_50', meanSection(datavals(i).f2, .25, .50), ...
                                   'f2_50_75', meanSection(datavals(i).f2, .50, .75), ...
                                   'f2_75_100', meanSection(datavals(i).f2, .75, .999), ...
                                   'f2_5_20', meanSection(datavals(i).f2, .05, .20), ...
                                   'f2_20_40', meanSection(datavals(i).f2, .20, .40), ...
                                   'f2_40_60', meanSection(datavals(i).f2, .40, .60), ...
                                   'f2_60_80', meanSection(datavals(i).f2, .60, .80), ...
                                   'int_median', median(datavals(i).int, "omitnan"), ...
                                   'int_mean', mean(datavals(i).int, "omitnan"), ...
                                   'int_start', getFirstLast(datavals, i, 'int', "first"), ...
                                   'int_end', getFirstLast(datavals, i, 'int', "last"), ...
                                   'f_onset', getFirstLast(datavals, i, 'ftrack_taxis', "first"), ...
                                   'f_offset', getFirstLast(datavals, i, 'ftrack_taxis', "last"), ...
                                   'pitch_onset', getFirstLast(datavals, i, 'pitch_taxis', "first"), ...
                                   'pitch_offset', getFirstLast(datavals, i, 'pitch_taxis', "last"), ...
                                   'ampl_onset', getFirstLast(datavals, i, 'ampl_taxis', "first"), ...
                                   'ampl_offset', getFirstLast(datavals, i, 'ampl_taxis', "last"), ...
                                   'dur', datavals(i).dur);
            end
        end
    end
end

function value = getFirstLast(x, index, metric, fl)
    x = x(index).(metric);
    x = x(~isnan(x));
    if strcmp(fl, 'first')
        if isempty(x)
            value = NaN;
        else
            value = x(1);
        end
    else
        if isempty(x)
            value = NaN;
        else
            value = x(end);
        end
    end
end

function mean_percentile = meanSection(vector, lower_percentile, upper_percentile)
    sorted_vector = sort(vector);
    lower_index = ceil(lower_percentile * numel(sorted_vector));
    upper_index = floor(upper_percentile * numel(sorted_vector));
    percentile_elements = sorted_vector(lower_index:upper_index);
    mean_percentile = mean(percentile_elements);
end